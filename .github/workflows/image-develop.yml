name: image-develop
on:
  push:
    branches:
      - master

jobs:
  function-image:
    name: docker build images of function
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: sudo apt update -y && sudo apt install -y qemu qemu-user-static
      - name: Install Docker CE for buildx
        run: |
          sudo apt update
          sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt update
          sudo apt install docker-ce
          docker -v
      - name: Checkout code
        uses: actions/checkout@v1
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS }}
      - name: build and publish baetyl-function image
        run: |
          make image PLATFORMS=all XFLAGS='--push' REGISTRY=baetyltechtest/

  python-image:
    name: docker build images of python
    runs-on: ubuntu-latest
    steps:
      - name: Install deps
        run: sudo apt update -y && sudo apt install -y qemu qemu-user-static
      - name: Install Docker CE for buildx
        run: |
          sudo apt update
          sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt update
          sudo apt install docker-ce
          docker -v
      - name: Checkout code
        uses: actions/checkout@v1
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS }}
      - name: build and publish python image
        run: |
          make python-image PLATFORMS=all XFLAGS='--push' REGISTRY=baetyltechtest/

  node-image:
      name: docker build images of node
      runs-on: ubuntu-latest
      steps:
        - name: Install deps
          run: sudo apt update -y && sudo apt install -y qemu qemu-user-static
        - name: Install Docker CE for buildx
          run: |
            sudo apt update
            sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo apt update
            sudo apt install docker-ce
            docker -v
        - name: Checkout code
          uses: actions/checkout@v1
        - name: docker login
          run: |
            docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS }}
        - name: build and publish node image
          run: |
            make node-image PLATFORMS=all XFLAGS='--push' REGISTRY=baetyltechtest/

  function-package:
    name: package function for native mode
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Build
        run: make package
      - name: Run unittest
        run: make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
